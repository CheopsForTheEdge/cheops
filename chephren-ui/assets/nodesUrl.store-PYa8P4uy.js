import{d as w,o as m,a as p,e as D,t as E,k as S,E as U,y as b,z as C,b as c,_ as O,bW as x}from"./index-KEx3fXyj.js";const u=t=>(b("data-v-3a4265e6"),t=t(),C(),t),F=u(()=>c("span",{class:"loader"},null,-1)),J={key:0,class:"loading-label"},z={key:0,class:"animated-dots"},I=u(()=>c("span",{class:"dot"},".",-1)),R=u(()=>c("span",{class:"dot"},".",-1)),v=u(()=>c("span",{class:"dot"},".",-1)),B=[I,R,v],$=w({__name:"LoadingSpinner",props:{customStyle:{type:Object,default:()=>({})},label:{type:String,required:!1},animatedDot:{type:Boolean,required:!1,default:!0}},setup(t){return(e,o)=>(m(),p("div",{class:"loading-spinner",style:U(t.customStyle)},[F,t.label?(m(),p("span",J,[D(E(t.label)+" ",1),t.animatedDot?(m(),p("span",z,B)):S("",!0)])):S("",!0)],4))}}),T=O($,[["__scopeId","data-v-3a4265e6"]]);var k={BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0,SSR:!1};class i{constructor(e,o){this.url=e,this.name=o}static fromJson(e){const o=URL.canParse(e.url)?new URL(e.url):new URL(`${k.VITE_DEFAULT_PROTOCOL}://${e.url}`);return new i(o,e.name)}static fromJsonList(e){return e.map(o=>i.fromJson(o))}equals(e){return this.hash===e.hash}contain(e){return e.split(" ").some(r=>this.url.host.toLowerCase().normalize("NFD").includes(r.trim().toLowerCase().normalize("NFD"))||this.name.toLowerCase().normalize("NFD").includes(r.trim().toLowerCase().normalize("NFD")))}toString(){return`${this.url} - ${this.name}`}isNode(e){return this.url.host===e.address.host&&this.name===e.name}get hash(){const e=this.url.host.toLowerCase().trim().normalize("NFD").split("").map(r=>r.charCodeAt(0).toString(16)).join(""),o=this.name.toLowerCase().trim().normalize("NFD").split("").map(r=>r.charCodeAt(0).toString(16)).join("");return`${e}${o}`}}const V=x("nodesUrl",()=>{let t=null;function e(s){localStorage.setItem("nodesUrl",JSON.stringify(s))}function o(){const s=localStorage.getItem("nodesUrl");if(!s)return[];const n=JSON.parse(s);return i.fromJsonList(n)}async function r(s){return new Promise((n,a)=>{const h=new FileReader;h.onload=async L=>{var f;const d=(f=L.target)==null?void 0:f.result;if(!d){a(new Error("Error while reading file, text is null"));return}if(typeof d!="string"){a(new Error("Error while reading file, text is not a string"));return}if(s.type==="application/json"){const N=JSON.parse(d);t=i.fromJsonList(N),e(t),n(t)}else a(new Error("Error while reading file, file type not supported : "+s.type))},h.readAsText(s)})}function _(){const s=l(),n=JSON.stringify(s);return new Blob([n],{type:"application/json"})}function l(){return t||(t=o()),t}function g(s){return t=[...l(),s],e(t),t}function y(s){return t=l().filter(a=>!a.equals(s)),t}return{importNodeUrls:r,exportNodeUrls:_,getNodeUrls:l,addNodeUrl:g,deleteNodeUrl:y}});export{T as L,i as N,V as u};
